openapi: 3.0.3
info:
  title: Products And Seller Management Swagger
  description: |-
    Документация API модуля управления товарами и поставщиками
  version: 1.0.0
tags:
  - name: Products
    description: Products Management
  - name: Suppliers
    description: Suppliers Management

security:
  - OAuth2_Local: [ ]
  - OAuth2_Integration: [ ]
paths:
  /management/products/{status}:
    get:
      tags:
        - Products
      summary: Get Products info (detailed)
      description: Returns Products detailed information
      operationId: ProductsByGet
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/ProductStatusQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsInfo'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error

    patch:
      tags:
        - Products
      summary: Change Products status
      description: Changes status of products
      operationId: ProductsByPatch
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/ProductStatusQuery'
        - $ref: '#/components/parameters/ArticlesQuery'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /management/product-article/{article}:
    get:
      tags:
        - Products
      summary: Get Product info (detailed)
      description: Returns Product detailed information
      operationId: ProductByGet
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/ArticlePath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsInfo'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /management/suppliers:
    get:
      tags:
        - Suppliers
      summary: Get suppliers info
      description: Returns suppliers information
      operationId: SuppliersByGet
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/SuppliersStatusQuery'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementSuppliersInfo'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
    post:
      tags:
        - Suppliers
      summary: Post suppliers info
      description: Saves new info about suppliers
      operationId: SuppliersByPost
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/ArticleQuery'
        - $ref: '#/components/parameters/ImageUrlQuery'
        - $ref: '#/components/parameters/ProductNameQuery'
        - $ref: '#/components/parameters/ProfitPlaceQuery'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/NewSupplierInfo'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /management/suppliers/names:
    post:
      tags:
        - Suppliers
      summary: Get suppliers info by names
      description: Returns suppliers information
      operationId: SuppliersNamesByGet
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagementSuppliersInfo'
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
  /management/suppliers/{status}:
    patch:
      tags:
        - Suppliers
      summary: Change Suppliers status
      description: Changes status of a suppliers
      operationId: SuppliersByPatch
      security:
        - OAuth2_Local: [ ]
        - OAuth2_Integration: [ ]
      parameters:
        - $ref: '#/components/parameters/SupplierStatusQuery'
        - $ref: '#/components/parameters/SuppliersQuery'
        - $ref: '#/components/parameters/ArticleQuery'
        - $ref: '#/components/parameters/CommentQuery'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad Request/Internal Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    OAuth2_Local:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: http://localhost:8444/realms/local/protocol/openid-connect/token
          scopes: { }

    OAuth2_Integration:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://adrontest.com:9443/realms/adron-test/protocol/openid-connect/token
          scopes: { }

  parameters:
    ProductStatusQuery:
      in: path
      name: status
      required: true
      description: Products status path param
      example: NOT_PROCESSED
      schema:
        $ref: '#/components/schemas/ProductStatusEnum'
    SupplierStatusQuery:
      in: path
      name: status
      required: true
      description: Products status path param
      example: NOT_PROCESSED
      schema:
        $ref: '#/components/schemas/SupplierStatusEnum'
    SuppliersStatusQuery:
      in: query
      name: statuses
      required: true
      description: Suppliers status query param
      example: COOPERATING
      schema:
        type: array
        items:
          $ref: '#/components/schemas/SupplierStatusEnum'
    ArticlesQuery:
      in: query
      name: articles
      required: true
      description: Product articles
      example: 12345
      schema:
        type: array
        items:
          type: string
    ArticleQuery:
      in: query
      name: article
      required: false
      description: Product article
      example: 12345
      schema:
        type: string
    ImageUrlQuery:
      in: query
      name: imageUrl
      required: false
      description: url of an image
      example: url
      schema:
        type: string
    ProductNameQuery:
      in: query
      name: productName
      required: false
      description: product name
      example: name
      schema:
        type: string
    ProfitPlaceQuery:
      in: query
      name: profitPlace
      required: false
      description: profit place
      example: 1
      schema:
        type: number
    ArticlePath:
      in: path
      name: article
      required: true
      description: Product article
      example: 12345
      schema:
        type: string
    SuppliersQuery:
      in: query
      name: suppliers
      required: true
      description: Suppliers ids
      example: 12345
      schema:
        type: array
        items:
          type: string
          format: uuid
          example: 7da6038d-fc4f-48d7-8110-71a53206967c
    CommentQuery:
      in: query
      name: comment
      required: false
      description: Comment of sending supplier to blacklist
      example: bad supplier
      schema:
        type: string

  schemas:
    ProductStatusEnum:
      type: string
      example: NOT_PROCESSED
      description: Status of good
      enum:
        - NOT_PROCESSED
        - PROCESSED
        - IGNORED
    SupplierStatusEnum:
      type: string
      example: NOT_COOPERATING
      description: Status of good
      enum:
        - NOT_COOPERATING
        - BLACKLISTED
        - MESSAGE_SENT
        - COOPERATING
        - WRONG

    ErrorResponse:
      type: object
      required:
        - errorCode
        - message
        - detailedMessage
        - timestamp
      description: Controlled Error Response
      properties:
        errorCode:
          type: string
          description: Error Business Code
          example: AGS-08
        message:
          type: string
          description: Error Description
          example: Old password doesn't match
        timestamp:
          type: string
          description: When the controlled error was produced
          example: 2024-04-21T13:26:44.148
        args:
          type: object
          description: Dynamic parameters passes as Map<String, Any>

    ProductsInfo:
      type: object
      required:
        - article
        - imageUrl
        - name
      properties:
        article:
          type: string
          example: 10002
          description: Product article
        imageUrl:
          type: string
          example: url
          description: Image url
        name:
          type: string
          example: Веревка с узлом, 25 г/15 см, Trixie (3270)
          description: Product name
        profitPlace:
          type: number
          example: 1
          description: Place in a profit table
    SuppliersName:
      type: object
      required:
        - supplierName
      properties:
        supplierName:
          type: string
          example: Guangxi Nanning Xunqianxi Trading Co., Ltd.
          description: Supplier name

    NewSupplierInfo:
      type: object
      required:
        - url
        - name
      properties:
        url:
          type: string
          example: url
          description: Supplier url
        name:
          type: string
          example: Веревка с узлом, 25 г/15 см, Trixie (3270)
          description: Product name

    ManagementSuppliersInfo:
      type: object
      required:
        - supplierId
        - status
        - name
      properties:
        supplierId:
          type: string
          format: uuid
          example: 7da6038d-fc4f-48d7-8110-71a53206967c
        status:
          $ref: '#/components/schemas/SupplierStatusEnum'
        name:
          type: string
          example: Huai'an One Pet Products Co., Ltd.
          description: Supplier name
        comment:
          type: string
          example: Поставщик не отправил товар в течение 2 месяцев
          description: Supplier comment

    PatchProductStatusRequest:
      type: object
      required:
        - productId
        - status
      properties:
        productId:
          type: string
          description: Product Id
          example: 10003
        status:
          type: string
          example: NOT_PROCESSED
          description: Status of good
          enum:
            - NOT_PROCESSED
            - PROCESSED
            - IGNORED
