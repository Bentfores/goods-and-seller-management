---
name: $SERVICE_NAME

services:
  database:
    image: postgres:14
    container_name: $SERVICE_NAME-postgres
    command: ["postgres", "-c", "log_statement=all"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    ports:
      - "5442:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      start_period: 15s
      timeout: 3s
      interval: 10s
      retries: 12

  zookeeper:
    image: zookeeper
    container_name: $SERVICE_NAME-zookeeper
    ports:
      - "2181:2181"

  kafka-1:
    image: bitnami/kafka
    container_name: $SERVICE_NAME-kafka-1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:9091,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9091,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafka-2:
    image: bitnami/kafka
    container_name: $SERVICE_NAME-kafka-2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-2:9090,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9090,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: $SERVICE_NAME-kafka-ui
    depends_on:
      - kafka-1
      - kafka-2
      - schema-registry
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9091,kafka-2:9090
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081

  schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    container_name: $SERVICE_NAME-schema-registry
    depends_on:
      - kafka-1
      - kafka-2
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9091,PLAINTEXT://kafka-2:9090
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"

  zipkin:
    image: openzipkin/zipkin
    container_name: $SERVICE_NAME-zipkin
    ports:
      - "9411:9411"

  create-topic:
    image: bitnami/kafka
    container_name: $SERVICE_NAME-create-topics
    depends_on:
      - kafka-1
      - kafka-2
    entrypoint: >
      /bin/sh -c "
      kafka-topics.sh --create --topic analysis-service.product-info.v1 --bootstrap-server kafka-1:9091 --partitions 3 --replication-factor 2 &&
      "

  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    container_name: "${SERVICE_NAME}_keycloak"
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_DB_VENDOR: h2
      KC_HTTP_ENABLED: true
      KC_HTTPS_ENABLED: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/local.json
    command: start-dev --import-realm
    volumes:
      - ./keycloak/local.json:/opt/keycloak/data/import/local.json
      - ./themes/:/opt/keycloak/themes/
    ports:
      - "8444:8080"
